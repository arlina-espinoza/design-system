/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else {
		var a = factory();
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(self, () => {
return /******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./stories/assets/js/filter-search-bar.js":
/*!************************************************!*\
  !*** ./stories/assets/js/filter-search-bar.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   \"toggleFilter\": () => (/* binding */ toggleFilter)\n/* harmony export */ });\nconst selectCount = [];\n\nconst toggleFilter = function () {\n  const $searchOption = $('.multi-select li input:checkbox');\n  const $chipWrapper = $('.search-filter .selected-chips');\n  $(\".multi-select\").each(function (index) {\n    const $numberOfCheck = $(this).find('input:checkbox:checked').length;\n\n    if ($numberOfCheck > 0) {\n      $(this).find('button').first().find('span').remove();\n      $(this).find('button').first().append('<span> (' + $numberOfCheck + ') </span>');\n    }\n  });\n  $($searchOption).on('click', function (e) {\n    e.stopImmediatePropagation();\n    const $el = $(this);\n    const $currentchipWrapper = $el.parents('.select-wrapper').find('.selected-chips');\n    const $eleId = $el.attr('id');\n    const $numberOfChecked = $(this).parents('.multi-select').find('input:checkbox:checked').length;\n    const $filterButton = $(this).parents('ul').not('.sub-menu').siblings();\n\n    if ($numberOfChecked > 0) {\n      $filterButton.find('span').remove();\n      $filterButton.append('<span> (' + $numberOfChecked + ') </span>');\n    } else {\n      $filterButton.find('span').remove();\n    }\n\n    if ($el.is(':checked')) {\n      const $optionValue = $(this).siblings().text();\n      const $chip = $('<span class=\"chip chip__cross\" tabindex=\"0\" role=\"button\"></span>').clone();\n      $chip.text($optionValue);\n      $chip.attr({\n        'option-name': $eleId\n      });\n      $($currentchipWrapper).append($chip);\n\n      if ($currentchipWrapper.find('.chip__cross').length > 0) {\n        $currentchipWrapper.siblings('.clear-search-filter').addClass('show-clear').siblings('.active-filter').addClass('show-activefilter');\n      }\n    } else {\n      if ($currentchipWrapper.find('.chip__cross').length < 2) {\n        $currentchipWrapper.siblings('.clear-search-filter').removeClass('show-clear').siblings('.active-filter').removeClass('show-activefilter');\n      }\n\n      $($el).parents('.select-wrapper').find(`[option-name='${$eleId}']`).remove();\n    }\n  });\n  $($chipWrapper).on('click', '.chip__cross', function (event) {\n    event.preventDefault();\n    const $el = $(this);\n    const $currentchipWrapper = $el.parents('.select-wrapper').find('.selected-chips');\n\n    if ($($currentchipWrapper).find('.chip__cross').length < 2) {\n      $el.parents('.select-wrapper').find('.clear-search-filter').removeClass('show-clear');\n      $el.parents('.select-wrapper').find('.active-filter').removeClass('show-activefilter');\n    }\n\n    const $id = $(this).attr('option-name');\n    const $findId = $(this).parents('.select-wrapper').find(`#${$id}`);\n    $findId.prop('checked', false);\n    const $inputCount = $findId.parents('.multi-select').find('input:checkbox:checked').length;\n    const $currentInputCount = $findId.parents('ul').not('.sub-menu').siblings();\n\n    if ($inputCount > 0) {\n      $currentInputCount.find('span').remove();\n      $currentInputCount.append('<span> (' + $inputCount + ') </span>');\n    } else {\n      $currentInputCount.find('span').remove();\n    }\n\n    $(this).remove();\n  });\n  $(document).on('click', '.clear-search-filter', function () {\n    const $el = $(this);\n    const $currentchipWrapper = $el.parents('.select-wrapper').find('.selected-chips');\n    $($currentchipWrapper).find('.chip').remove();\n    $el.parents('.select-wrapper').find('.clear-search-filter').removeClass('show-clear');\n    $el.parents('.select-wrapper').find('.active-filter').removeClass('show-activefilter');\n    $el.parents('.select-wrapper').find(\"input[type='checkbox']\").prop('checked', false);\n    $el.parents('.select-wrapper').find(\"button\").find('span').remove();\n  });\n  $(document).on('click', '.sort-filter-search', function () {\n    $(this).toggleClass('close');\n    $(this).next('.search-filter').toggleClass('show-filter');\n  });\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (toggleFilter); // for webpack build\n\n\n\n//# sourceURL=webpack://design-system-undp/./stories/assets/js/filter-search-bar.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./stories/assets/js/filter-search-bar.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});