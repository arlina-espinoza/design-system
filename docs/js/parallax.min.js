/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else {
		var a = factory();
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(self, () => {
return /******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./stories/assets/js/parallax.js":
/*!***************************************!*\
  !*** ./stories/assets/js/parallax.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"parallaxEffect\": () => (/* binding */ parallaxEffect),\n/* harmony export */   \"parallaxlines\": () => (/* binding */ parallaxlines)\n/* harmony export */ });\n/* harmony import */ var _viewport__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./viewport */ \"./stories/assets/js/viewport.js\");\n/* harmony import */ var _viewport__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_viewport__WEBPACK_IMPORTED_MODULE_0__);\n // parallaxEffect\n\nconst parallaxEffect = (trigger, selector, start, end, direction, device, percent) => {\n  'use strict'; // Register GSAP required plugins and effects.\n\n  gsap.registerPlugin(ScrollTrigger, SlowMo); // Save Initial ScrollTrigger Styles.\n\n  ScrollTrigger.saveStyles(selector); // Set Parallax Trigger to Array\n\n  const parallaxContainer = gsap.utils.toArray(trigger); // Set Defaults.\n\n  start = start || 'top bottom';\n  end = end || 'bottom top';\n  direction = direction || 'horizontal';\n  device = device || 'desktop';\n  percent = percent || 'pixels'; // RTL Fix for Storybook.\n\n  let rtl = document.dir || 'ltr';\n\n  if (window.location.href.indexOf(\"direction=rtl\") > -1) {\n    rtl = 'rtl';\n  }\n\n  const num = rtl == 'rtl' ? 1 : 0; // Parallax Init Function\n\n  function initParallax() {\n    parallaxContainer.forEach((container, index) => {\n      // Incase of swiper slides in horizontal we wrap slides in group of 3.\n      if (direction == 'horizontal') {\n        const swiperSlides = container.querySelectorAll('.swiper-slide'); // Define empty array to use array.push().\n\n        const holder = [];\n\n        if (container.querySelector('.swiper-wrapper') != undefined) {\n          $(swiperSlides).each(function (index, element) {\n            holder.push(element);\n\n            if (holder.length === 3) {\n              $(holder).wrapAll('<div class=\"stats-card-parallax parallax-slide\" />');\n              holder.length = 0;\n            }\n          }); // Set the new selector and trigger for wrapped items.\n\n          selector = '.parallax-slide';\n          container = container.querySelector('.swiper-wrapper');\n        }\n      } // Define ScrollTrigger within Timeline.\n\n\n      container.querySelectorAll(selector).forEach((element, i) => {\n        const odd = (i + 1) % 2 != num;\n        const timeline = gsap.timeline({\n          // Define scrollTrigger options.\n          scrollTrigger: {\n            trigger: container,\n            start,\n            end,\n            scrub: true,\n            ease: 'SlowMo'\n          }\n        }); // Timeline Init\n\n        if (direction == 'horizontal') {\n          // Define timeline from and to parameters. x means horizontal and y means vertical.\n          timeline.from(element, {\n            xPercent: 70 * (odd ? -1 : 1),\n            duration: 1,\n            ease: 'SlowMo'\n          }).to(element, {\n            xPercent: 10 * (odd ? 1 : -1),\n            duration: 1,\n            ease: 'SlowMo'\n          });\n        } else {\n          if (percent == 'percent') {\n            timeline.from(element, {\n              yPercent: 10 * (odd ? 1 : -1),\n              duration: 1,\n              ease: 'SlowMo'\n            }).to(element, {\n              yPercent: 10 * (odd ? -1 : 1),\n              duration: 1,\n              ease: 'SlowMo'\n            });\n          } else {\n            timeline.from(element, {\n              y: 85 * (odd ? -1 : 1),\n              duration: 1,\n              ease: 'SlowMo'\n            }).to(element, {\n              y: 85 * (odd ? 1 : -1),\n              duration: 1,\n              ease: 'SlowMo'\n            });\n          }\n        }\n      });\n    });\n  } // ScrollTrigger Internal MatchMedia Function.\n  // This is useful as we do not need to use any window resize event observer.\n\n\n  ScrollTrigger.matchMedia({\n    //ScrollTrigger will match the below mediaQueries and incase if there is no match then it will kill itself.\n    // Desktop.\n    '(min-width: 768px)': function () {\n      if (device == 'desktop') {\n        initParallax();\n      }\n    },\n    // Mobile\n    '(max-width: 768px)': function () {// Kill on mobile otherwise.\n    },\n    // Will run both on Desktop and Mobile.\n    \"all\": function () {\n      // We need to explicitly pass the `device` argument for this to work.\n      if (device == 'all') {\n        initParallax();\n      }\n    }\n  });\n}; // parallaxlines Function.\n\nfunction parallaxlines() {\n  $(window).scroll(() => {\n    // variables\n    var $sticky = $('.parallax .swiper-wrapper');\n    var stickyTop = $sticky.offset().top;\n    var windowTop = $(window).scrollTop();\n    var diff = windowTop + 500; // calculates the window width\n\n    const windowWidth = $(window).width();\n    $('.parallax .swiper-wrapper').each(function () {\n      if (windowWidth > window.UNDP.breakpoints.SMALL) {\n        $('.parallax').removeClass('lines-background');\n\n        if ($(this).isInViewport()) {\n          if (stickyTop < diff) {\n            $('.parallax').toggleClass('lines-background');\n          }\n        }\n      }\n    });\n  });\n}\n\n//# sourceURL=webpack://design-system-undp/./stories/assets/js/parallax.js?");

/***/ }),

/***/ "./stories/assets/js/viewport.js":
/*!***************************************!*\
  !*** ./stories/assets/js/viewport.js ***!
  \***************************************/
/***/ (() => {

eval("/* Function to chech if element is in viewport or not */\n(function ($) {\n  $.fn.isInViewport = function () {\n    const $elementTop = $(this).offset().top;\n    const $elementBottom = $elementTop + $(this).outerHeight();\n    const $viewportTop = $(window).scrollTop();\n    const $viewportBottom = $viewportTop + $(window).height();\n    return $elementBottom > $viewportTop && $elementTop < $viewportBottom;\n  };\n\n  $(window).on('resize scroll load', () => {\n    $('[data-viewport=true]').each(function () {\n      if ($(this).isInViewport()) {\n        $(this).addClass('inviewport');\n      }\n    });\n  });\n})(jQuery);\n\n//# sourceURL=webpack://design-system-undp/./stories/assets/js/viewport.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./stories/assets/js/parallax.js");
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});