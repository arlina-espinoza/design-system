/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else {
		var a = factory();
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(self, () => {
return /******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./stories/assets/js/multi-select.js":
/*!*******************************************!*\
  !*** ./stories/assets/js/multi-select.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"multiSelect\": () => (/* binding */ multiSelect)\n/* harmony export */ });\nclass MultiSelect {\n  constructor(element) {\n    this.classOpen = 'open';\n    this.$window = $(window);\n    this.$currentSelect = $(element);\n    this.$selectTrigger = this.$currentSelect.find('button').first();\n  }\n\n  init() {\n    this.addListeners();\n    this.listenerWindowClick();\n  }\n\n  addListeners() {\n    this.$selectTrigger.click(ev => {\n      ev.stopImmediatePropagation();\n      this.toggleSelect();\n    });\n    this.$currentSelect.on('click', 'input[type=checkbox]', ev => {\n      ev.stopImmediatePropagation();\n      const $selectedCheckbox = $(ev.target);\n      const $selectedOption = $selectedCheckbox.closest('li[role=option]');\n      $selectedOption.attr('aria-selected', $selectedCheckbox.is(':checked'));\n    });\n    this.$currentSelect.on('click', '.has-submenu > .checkbox-item', ev => {\n      ev.stopImmediatePropagation();\n      const $clickedElement = $(ev.target);\n\n      if (!$clickedElement.hasClass('checkmark')) {\n        ev.preventDefault();\n        const $rowHasSubmenu = $(ev.currentTarget).closest('li.has-submenu');\n        const $caretButton = $rowHasSubmenu.find('button.caret');\n        $rowHasSubmenu.toggleClass('open');\n\n        if ($rowHasSubmenu.attr('aria-expanded') === 'true') {\n          $rowHasSubmenu.attr('aria-expanded', 'false');\n          $caretButton.attr('aria-expanded', 'false');\n        } else {\n          $rowHasSubmenu.attr('aria-expanded', 'true');\n          $caretButton.attr('aria-expanded', 'true');\n        }\n      }\n    });\n    this.$currentSelect.on('click', '.has-submenu > button.caret', ev => {\n      const $caretButton = $(ev.currentTarget);\n      $caretButton.siblings('.checkbox-item').trigger('click');\n    });\n  }\n\n  listenerWindowClick() {\n    this.$window.click(evt => {\n      if (this.$currentSelect && !this.$currentSelect.is(evt.target) && this.$currentSelect.has(evt.target).length === 0 && this.$currentSelect.hasClass(this.classOpen)) {\n        this.$currentSelect.removeClass(this.classOpen);\n        this.$selectTrigger.attr('aria-expanded', 'false');\n      }\n    });\n  }\n\n  toggleSelect() {\n    this.$currentSelect.toggleClass(this.classOpen);\n\n    if (this.$selectTrigger.attr('aria-expanded') === 'true') {\n      this.$selectTrigger.attr('aria-expanded', 'false');\n    } else {\n      this.$selectTrigger.attr('aria-expanded', 'true');\n    }\n  }\n\n}\n\nfunction multiSelect() {\n  $(\".multi-select\").each(function (index) {\n    const numberOfCheck = $(this).find('input:checkbox:checked').length;\n\n    if (numberOfCheck > 0) {\n      $(this).find('button').first().find('span').remove();\n      $(this).find('button').first().append('<span> (' + numberOfCheck + ') </span>');\n    }\n  });\n  const searchOption = $('.multi-select li input:checkbox');\n  $(searchOption).on('click', function () {\n    const numberOfChecked = $(this).parents('.multi-select').find('input:checkbox:checked').length;\n    const filterButton = $(this).parents('ul').not('.sub-menu').siblings();\n\n    if (numberOfChecked > 0) {\n      filterButton.find('span').remove();\n      filterButton.append('<span> (' + numberOfChecked + ') </span>');\n    } else {\n      filterButton.find('span').remove();\n    }\n  });\n  const $selects = $('[data-multi-select]');\n  $selects.each((i, select) => {\n    const multiSelect = new MultiSelect(select);\n    multiSelect.init();\n  });\n}\n\n//# sourceURL=webpack://design-system-undp/./stories/assets/js/multi-select.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./stories/assets/js/multi-select.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});