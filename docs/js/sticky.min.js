/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else {
		var a = factory();
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(self, () => {
return /******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./stories/assets/js/resize.js":
/*!*************************************!*\
  !*** ./stories/assets/js/resize.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"windowResize\": () => (/* binding */ windowResize)\n/* harmony export */ });\n// Declare variables.\nconst delay = 200;\nlet isStart = true;\nlet timeoutId; // Resize Started\n\nlet triggerResizeStart = el => {\n  el.trigger('resizestart');\n  isStart = !isStart;\n}; // Resize Ended\n\n\nlet triggerResizeEnd = el => {\n  clearTimeout(timeoutId);\n  timeoutId = setTimeout(function () {\n    el.trigger('resizeend');\n    isStart = !isStart;\n  }, delay);\n}; // Resize Event Callback\n\n\nconst resizeEventsTrigger = el => {\n  isStart ? triggerResizeStart(el) : triggerResizeEnd(el);\n}; // Custom Windows Resize Function.\n\n\nfunction windowResize(elem, fn) {\n  // Resize Event Observer.\n  elem.resize(function () {\n    resizeEventsTrigger(elem);\n  }); // Resize before callback.\n  //  For now this is not required so keeping this line commented as we may use it in future.\n  // elem.on('resizestart', fn);\n  // Resize after callback.\n\n  elem.on('resizeend', fn);\n}\n;\n\n//# sourceURL=webpack://design-system-undp/./stories/assets/js/resize.js?");

/***/ }),

/***/ "./stories/assets/js/sticky.js":
/*!*************************************!*\
  !*** ./stories/assets/js/sticky.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"sticky\": () => (/* binding */ sticky)\n/* harmony export */ });\n/* harmony import */ var _resize__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./resize */ \"./stories/assets/js/resize.js\");\n // stickyScroll handler function.\n\nfunction sticky(stickyArea, stickyMovingSide, StickyScrollBar) {\n  const stickyScroll = state => {\n    const $sticky = $(stickyArea);\n    const $relatedPublication = $(stickyMovingSide);\n\n    if ($($sticky).length && $($relatedPublication).length) {\n      if (state) {\n        // Calculate values only if stickyScroll enabled.\n        const $stickyTop = $($sticky).offset().top;\n        const $headerHeight = $('.header').innerHeight() + 15 || 130;\n        const $footerTop = $('.footer').offset().top;\n        $(window).on(\"scroll\", () => {\n          // Calculate this inside scroll after image loads.\n          const $stickyHeight = $($sticky).innerHeight();\n          const $stickyReleaseHeight = $($relatedPublication).innerHeight();\n          const $stickyReleaseOffset = $($relatedPublication).offset().top;\n          let windowTop = Math.round($(window).scrollTop());\n          let startPoint = Math.round($stickyTop - $headerHeight) < windowTop;\n          let $stickyScrollUp = Math.round($stickyReleaseOffset + $stickyReleaseHeight - $stickyHeight);\n          let stopPoint = windowTop > $stickyScrollUp - $headerHeight;\n\n          if (startPoint && !stopPoint) {\n            $($sticky).css({\n              position: 'fixed',\n              top: $headerHeight,\n              width: 'inherit'\n            });\n          } else if (stopPoint) {\n            $($sticky).css({\n              position: 'absolute',\n              top: $stickyScrollUp,\n              width: 'inherit'\n            });\n          } else {\n            $($sticky).css({\n              position: 'absolute',\n              top: 'initial',\n              width: 'inherit'\n            });\n          }\n        });\n      } else {\n        // Unbind window scroll event and Reset sticky position if stickyScroll disabled.\n        $(window).on('scroll', function () {\n          $($sticky).css({\n            position: '',\n            top: '',\n            width: '100%'\n          });\n        });\n      }\n    }\n  }; //stickyScrollBar add on Sidebar,if sidebar content is more than [window screen - header Height].\n\n\n  const stickyScrollBar = () => {\n    // initialize stickyScrollBar \n    const $sidebarWrapper = $(StickyScrollBar); // stickyScrollBar length check \n\n    if ($($sidebarWrapper).length) {\n      const $sidebarHeight = $sidebarWrapper.innerHeight();\n      const $windowHeight = $(window).innerHeight();\n      const $headerHeight = $('.header').height(); // stickyScrollBar function condition check.\n\n      if ($sidebarHeight > $windowHeight - $headerHeight) {\n        $sidebarWrapper.addClass('scrollbar');\n      } else {\n        $sidebarWrapper.removeClass('scrollbar');\n      }\n    }\n  }; // initialize stickyScrollBar function.\n\n\n  $(window).on('load', function () {\n    stickyScrollBar();\n  }); // initialize stickyScroll function and enable/disable based on mediaQuery breakpoint.\n\n  const initStickyScroll = params => {\n    const $windowWidth = $(window).width();\n    const breakpoint = window.UNDP.breakpoints.LARGE || 1024;\n\n    if ($windowWidth >= breakpoint) {\n      // Enable Sticky Scroll.\n      stickyScroll(true);\n    } else {\n      // Disable Sticky Scroll.\n      stickyScroll(false);\n    }\n  }; // Run on doc ready.\n\n\n  $(document).ready(() => {\n    let init = false;\n\n    if (!init) {\n      initStickyScroll();\n      init = true;\n    }\n  }); // Custom windowResize;\n\n  _resize__WEBPACK_IMPORTED_MODULE_0__.windowResize($(window), e => {\n    initStickyScroll();\n    stickyScrollBar();\n  });\n}\n\n//# sourceURL=webpack://design-system-undp/./stories/assets/js/sticky.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./stories/assets/js/sticky.js");
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});