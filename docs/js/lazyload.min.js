!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var s=t();for(var o in s)("object"==typeof exports?exports:e)[o]=s[o]}}(self,(()=>(window.onload=function(){const e="lazy",t="img.lazy",s="picture.lazy";if(null!==document.querySelectorAll(t)&&null!==document.querySelectorAll(s)){let o=[].slice.call(document.querySelectorAll(t)),c=[].slice.call(document.querySelectorAll(s));if("IntersectionObserver"in window){let t=new IntersectionObserver((function(s,o){s.forEach((function(s){if(s.isIntersecting){let o=s.target;if(!o.classList.contains("lazyloaded")){if("PICTURE"===o.nodeName){const e=o.querySelectorAll("source"),t=o.querySelector("img");e.forEach((e=>{e.srcset=e.dataset.srcset})),t.src=t.dataset.src,t.style.opacity=1}else o.src=o.dataset.src,o.style.opacity=1;t.unobserve(o),o.classList.remove(e),o.classList.add("lazyloaded")}}}))}),{rootMargin:"300px 0px"});o.forEach((function(e){e.classList.contains("lazyloaded")||(t.observe(e),e.style.cssText="opacity: 0; transition: opacity 1s ease")})),c.forEach((function(e){e.classList.contains("lazyloaded")||(t.observe(e),e.querySelector("img").style.cssText="opacity: 0; transition: opacity 1s ease")}))}else o.forEach((function(t){t.src=t.dataset.src,t.classList.remove(e),t.classList.add("nolazy")})),c.forEach((function(t){const s=t.querySelectorAll("source"),o=t.querySelector("img");s.forEach((function(e){e.srcset=o.dataset.srcset})),o.src=o.dataset.src,t.classList.remove(e),t.classList.add("nolazy")}))}},{})));